name: pypi build and release
on:
  pull_request:
   branches:
      - main
   types: [closed]
jobs:
  release-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Extract version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(cat pyproject.toml | grep -E '^version\s*=' | sed -E 's/version\s*=\s*"([^"]+)"/\1/')
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $VERSION"
      - name: Build release distributions
        run: |
          python -m pip install build
          python -m build
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/
          # Pass the version as a property of the artifact
          if-no-files-found: error
  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write
    environment:
      name: pypi
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
  create-release:
    runs-on: ubuntu-latest
    needs:
     - pypi-publish
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Extract version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(cat pyproject.toml | grep -E '^version\s*=' | sed -E 's/version\s*=\s*"([^"]+)"/\1/')
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $VERSION"
      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.get_version.outputs.PACKAGE_VERSION }}
          name: Release ${{ steps.get_version.outputs.PACKAGE_VERSION }}
          body: |
            Release version ${{ steps.get_version.outputs.PACKAGE_VERSION }}
